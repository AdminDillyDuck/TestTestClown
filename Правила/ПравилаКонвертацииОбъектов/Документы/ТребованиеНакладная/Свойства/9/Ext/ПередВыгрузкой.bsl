//Кузнецов Е.В. 26.09.2017 отключена вся схема что бы была возможность восстановить без проблем. 
//С требованиями суть такая. Не важно что указано в складе БУ и в организации склада. Нужно попытаться найти кто обслуживает модель оборудования по данномй площадке т.е. подрядчика
//Если подрядчика нет то выгружаем по основным правилам

//ВремЗначение = Источник.Склад;

//Если ЗначениеЗаполнено(Источник.Склад.Контрагент) И НЕ ЗначениеЗаполнено(Источник.Склад.СкладБУ) Тогда // склады подрядчиков выгружаются неизменными
//	мСклад = ВремЗначение;
//	ЗаписьЖурналаРегистрации("Склады подрядчиков выгружаются неизменными " +мСклад);
//	Выполнить(Алгоритмы.ОпределитьСкладВыгрузки);
//Иначе
//		
//	МассивСкладыПодмены = Новый Массив;
//	Если Источник.Материалы.Количество()>0 И ЗначениеЗаполнено(Источник.Материалы[0].МодельОборудования) Тогда
//		МассивСкладыПодмены = Параметры.СкладыПодмены.НайтиСтроки(Новый Структура("Склад, Площадка, ТипОборудования", ВремЗначение, Источник.КлаймДескПлощадка, Источник.Материалы[0].МодельОборудования.ТипОборудования));
//    КонецЕсли;
//	
//	Если МассивСкладыПодмены.Количество()>0 Тогда
//		Значение = МассивСкладыПодмены[0].СкладПодмены;
//	Иначе	
//		Если Источник.Материалы.Количество()>0 И ЗначениеЗаполнено(Источник.Материалы[0].МодельОборудования) Тогда
//			
//			//Проверка есть ли подрядчик.
//			Запросы.ОрганизацияСкладаПоМоделиОборудования.УстановитьПараметр("КонецПериода", КонецДня(Источник.Дата));
//			Запросы.ОрганизацияСкладаПоМоделиОборудования.УстановитьПараметр("ТипОборудования", Источник.Материалы[0].МодельОборудования.ТипОборудования);
//			Запросы.ОрганизацияСкладаПоМоделиОборудования.УстановитьПараметр("Площадка", Источник.КлаймДескПлощадка);
//			Запросы.ОрганизацияСкладаПоМоделиОборудования.УстановитьПараметр("ВидСвязи", Перечисления.ВидыСобственныхКонтрагентов.Организация);
//			Запросы.ОрганизацияСкладаПоМоделиОборудования.УстановитьПараметр("КодОрганизации", Параметры.ОрганизацияВыгрузки.Код);
//			
//			Результат = Запросы.ОрганизацияСкладаПоМоделиОборудования.Выполнить().Выгрузить(); 					
//			
//			Если (Результат.Количество() = 1 И НЕ Результат[0].Объект = Параметры.ОрганизацияВыгрузки) Тогда
//				СрезСкладовПодмены = РегистрыСведений.ПодменыПриОбмене.СрезПоследних(Источник.Дата, Новый Структура("ОрганизацияВыгрузки, ДополнительныйРезвизит", Параметры.ОрганизацияВыгрузки, Результат[0].Объект));
//				Значение = ?(СрезСкладовПодмены.Количество() > 0, СрезСкладовПодмены[0].Подмена, ВремЗначение);
//				ЗаписьЖурналаРегистрации("_1. значение " +Значение);
//				
//			ИначеЕсли Результат.Количество() > 1 Тогда
//				ИзменитьСклад = Истина;
//				
//				Запросы.ДоговорПодрядчика.УстановитьПараметр("Владелец", Источник.КлаймДескКонтрагент);
//				Запросы.ДоговорПодрядчика.УстановитьПараметр("ВидВзаиморасчетов", Справочники.ВидыВзаиморасчетов.НайтиПоНаименованию("Услуги сервиса"));
//				Запросы.ДоговорПодрядчика.УстановитьПараметр("СрокДействия", Источник.Дата);
//				Запросы.ДоговорПодрядчика.УстановитьПараметр("Подпись", Перечисления.ксПодписьДокумента.НеПодписан);
//				ТаблицаРезультата = Запросы.ДоговорПодрядчика.Выполнить().Выгрузить();
//				
//				Для Каждого ТекСтрока Из Результат Цикл
//					Для Каждого ТекСтрокаПодрядчиков Из ТаблицаРезультата Цикл
//						Если (ТекСтрокаПодрядчиков.Организация <> Параметры.ОрганизацияВыгрузки) И (ТекСтрокаПодрядчиков.Организация = ТекСтрока.Объект) Тогда
//							СрезСкладовПодмены = РегистрыСведений.ПодменыПриОбмене.СрезПоследних(Источник.Дата, Новый Структура("ОрганизацияВыгрузки, ДополнительныйРезвизит", Параметры.ОрганизацияВыгрузки, ТекСтрокаПодрядчиков.Организация));
//							Значение = ?(СрезСкладовПодмены.Количество() > 0, СрезСкладовПодмены[0].Подмена, ВремЗначение);
//							ЗаписьЖурналаРегистрации("_2. значение " +Значение);
//							ИзменитьСклад = Ложь;
//							Прервать;
//						КонецЕсли;
//					КонецЦикла;
//					Если НЕ ИзменитьСклад Тогда
//						Прервать;
//					КонецЕсли;
//				КонецЦикла;
//				Если ИзменитьСклад Тогда
//					мСклад = ВремЗначение;
//					ЗаписьЖурналаРегистрации("_1. " +мСклад);
//					Выполнить(Алгоритмы.ОпределитьСкладВыгрузки);
//				КонецЕсли;
//			Иначе
//				//Если нету подрядчика то проверяем склад.
//				мСклад = ВремЗначение;
//				ЗаписьЖурналаРегистрации("_2. " +мСклад);
//				Выполнить(Алгоритмы.ОпределитьСкладВыгрузки);
//			КонецЕсли;
//		Иначе
//			мСклад = ВремЗначение;
//			ЗаписьЖурналаРегистрации("_3. " +мСклад);
//			Выполнить(Алгоритмы.ОпределитьСкладВыгрузки);
//		КонецЕсли;
//		
//		Если Источник.Материалы.Количество()>0 Тогда
//			НоваяСтрока = Параметры.СкладыПодмены.Добавить();
//			НоваяСтрока.Склад = Источник.Склад;
//			НоваяСтрока.Площадка = Источник.КлаймДескПлощадка;
//			НоваяСтрока.ТипОборудования = Источник.Материалы[0].МодельОборудования.ТипОборудования;
//			НоваяСтрока.СкладПодмены = ?(Значение = Неопределено, ВремЗначение, Значение);
//		КонецЕсли;	
//	КонецЕсли;
//КонецЕсли;
//Конец старой схемы

//Новая схема

мСклад = Источник.Склад;
Выполнить(Алгоритмы.ОпределитьСкладВыгрузки);