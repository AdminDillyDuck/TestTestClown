Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
	Объект.Организация = Параметры.ОсновнаяОрганизация;
КонецЕсли;


Объект.ДополнительныеСвойства.Вставить("ЗаполнитьСчетаУчетаПередЗаписью", Истина);

//Документы.АвансовыйОтчет.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Товары");
//Документы.АвансовыйОтчет.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "ВозвратнаяТара");

//Для каждого СтрокаТЧ Из Объект.ВозвратнаяТара Цикл
//	
//	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
//			Объект.Организация,
//			СтрокаТЧ.Контрагент,
//			СтрокаТЧ.ДоговорКонтрагента);
//		
//	СтрокаТЧ.СчетУчетаТары = СчетаУчета.СчетУчетаТары;
//		
//КонецЦикла;

МассивТЧ = Новый Массив;
Если УчетнаяПолитика.ПрименяетсяУСН(Объект.Организация, Объект.Дата) Тогда
	
	МассивТЧ.Очистить();
	МассивТЧ.Добавить("Товары");
	МассивТЧ.Добавить("Прочее");

	Для каждого ИмяТЧ из МассивТЧ Цикл
		Для каждого СтрокаТЧ из Объект[ИмяТЧ] Цикл
			СтрокаТЧ.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
		КонецЦикла;
	КонецЦикла;
	
КонецЕсли;

Для каждого СтрокаТабличнойЧасти Из Объект.ОплатаПоставщикам Цикл
	
	Если СтрокаТабличнойЧасти.СпособПогашенияЗадолженности = "ПоДокументу" Тогда
		
		СтрокаТабличнойЧасти.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.ПоДокументу;
		
	Иначе СтрокаТабличнойЧасти.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
		
	КонецЕсли;
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
			Объект.Организация,
			СтрокаТабличнойЧасти.Контрагент,
			СтрокаТабличнойЧасти.ДоговорКонтрагента);
			
	Если СтрокаТабличнойЧасти.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
		СтрокаТабличнойЧасти.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовСКомитентом;
	Иначе
		СтрокаТабличнойЧасти.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
	КонецЕсли;
	СтрокаТабличнойЧасти.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансов;
	
КонецЦикла;

ПодразделениеПоУмолчанию = ОбщегоНазначенияБПВызовСервера.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");

Если ПодразделениеПоУмолчанию.Владелец = Объект.Организация Тогда
	Объект.ПодразделениеОрганизации = ПодразделениеПоУмолчанию;
КонецЕсли;

Для каждого СтрокаТЧ Из Объект.Прочее Цикл
	СтатьяЗатрат      	= СтрокаТЧ.Субконто1;
	Если СтатьяЗатрат 	= Справочники.СтатьиЗатрат.НайтиПоКоду("00052") Тогда
		СтатьяЗатрат 	= Справочники.СтатьиЗатрат.НайтиПоКоду("000000020");
	КонецЕсли;	
	НоменклатурнаяГруппа = СтрокаТЧ.Субконто2;
	Подразделение        = СтрокаТЧ.Субконто3;
	СтрокаТЧ.Субконто1 = Неопределено;
	СтрокаТЧ.Субконто2 = Неопределено;
	СтрокаТЧ.Субконто3 = Неопределено;
	
		
	Если ЗначениеЗаполнено(СтрокаТЧ.СчетЗатрат) Тогда
		Счет = СтрокаТЧ.СчетЗатрат;
		Если Счет.УчетПоПодразделениям Тогда
			СтрокаТЧ.ПодразделениеЗатрат = Подразделение;
		КонецЕсли;
		ЧислоАктивныхСубконто = Счет.ВидыСубконто.Количество();
		Для Сч = 1 По ЧислоАктивныхСубконто Цикл
			Если Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
				СтрокаТЧ["Субконто"+Сч] = СтатьяЗатрат;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты Тогда
				СтрокаТЧ["Субконто"+Сч] = Объект.Контрагент;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры Тогда
				СтрокаТЧ["Субконто"+Сч] = Объект.ДоговорКонтрагента;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура Тогда
				СтрокаТЧ["Субконто"+Сч] = СтрокаТЧ.Номенклатура;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
				СтрокаТЧ["Субконто"+Сч] = НоменклатурнаяГруппа;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
				СтрокаТЧ["Субконто"+Сч] = Подразделение;
			КонецЕсли;
		КонецЦикла;
		Счет = СтрокаТЧ.СчетЗатратНУ;
		ЧислоАктивныхСубконто = Счет.ВидыСубконто.Количество();
		Для Сч = 1 По ЧислоАктивныхСубконто Цикл
			Если Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
				СтрокаТЧ["СубконтоНУ"+Сч] = СтатьяЗатрат;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты Тогда
				СтрокаТЧ["СубконтоНУ"+Сч] = Объект.Контрагент;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры Тогда
				СтрокаТЧ["СубконтоНУ"+Сч] = Объект.ДоговорКонтрагента;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура Тогда
				СтрокаТЧ["СубконтоНУ"+Сч] = СтрокаТЧ.Номенклатура;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
				СтрокаТЧ["СубконтоНУ"+Сч] = НоменклатурнаяГруппа;
			ИначеЕсли Счет.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
				СтрокаТЧ["СубконтоНУ"+Сч] = Подразделение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтрокаТЧ.ПодразделениеЗатрат = БухгалтерскийУчет.ПолучитьПодразделениеПоСчету(
			СтрокаТЧ.ПодразделениеЗатрат,
			СтрокаТЧ.СчетЗатрат,
			Объект.Организация,
			Объект.ПодразделениеОрганизации
	);
	
КонецЦикла;

Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
	Объект.Склад = Параметры.СкладДляОбменаДаннымиСУТ;
КонецЕсли;

Объект.ВыданныеАвансы.Очистить();	

Выполнить(Алгоритмы.ПровестиДокумент);