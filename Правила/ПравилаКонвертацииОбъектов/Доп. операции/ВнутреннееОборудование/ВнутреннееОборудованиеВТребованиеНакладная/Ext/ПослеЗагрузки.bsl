
ВыгрузитьВБП = ПараметрыОбъекта.Получить("ВыгрузитьВБП");

Если (Объект.Ссылка.Пустая() И НЕ ВыгрузитьВБП) Или (ДатыЗапретаИзменения.ИзменениеЗапрещено(Объект, , Ложь) Или Объект.Ссылка.РучнаяКорректировка) Тогда
	
	Отказ = Истина; 
	
Иначе
	
	//Объект.Материалы.Свернуть("Номенклатура, ЕдиницаИзмерения, СчетЗатрат, СтатьяЗатрат, Коэффициент", "Количество"); // 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163]
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Параметры.ОсновнаяОрганизация;
	КонецЕсли;
	
	Объект.СчетаУчетаЗатратВТаблице  = Истина;  
	ЕстьПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН(Объект.Организация, Объект.Дата);
	
	ТаблицаДляСчетов = Объект.Материалы.Выгрузить();
	// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] НАЧАЛО
	ТаблицаДляСчетов.Колонки.Добавить("СтатьяЗатрат"); 
	ТаблицаДляСчетов.Колонки.Добавить("НоменклатурнаяГруппа");
	ПараметрыТЧматериалы = ПараметрыОбъекта["МатериалыТабличнаяЧасть"];
	// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] КОНЕЦ
	
	Документы.ТребованиеНакладная.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Материалы");
	
	Для Каждого СтрСчет Из ТаблицаДляСчетов Цикл
		
		// 1СTeam Томилин А.П. 18.01.2024 [T1C-3235] НАЧАЛО
		Если ПараметрыТЧматериалы <> Неопределено Тогда
			СтруктураПараметров = Новый Структура("СтатьяЗатрат,НоменклатурнаяГруппа");
			ЗаполнитьЗначенияСвойств(СтруктураПараметров, ПараметрыТЧматериалы[СтрСчет.НомерСтроки-1]);
			
			ЗаполнитьЗначенияСвойств(СтрСчет, СтруктураПараметров);
		КонецЕсли;
		// 1СTeam Томилин А.П. 18.01.2024 [T1C-3235] КОНЕЦ
		
		// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] НАЧАЛО
		//СтрСчет.СтатьяЗатрат = ПараметрыТЧматериалы[СтрСчет.НомерСтроки-1].СтатьяЗатрат; // Перенесено выше // 1СTeam Томилин А.П. 18.01.2024 [T1C-3235] КОНЕЦ
		//СтрСчет.НоменклатурнаяГруппа = ПараметрыТЧматериалы[СтрСчет.НомерСтроки-1].НоменклатурнаяГруппа;
		//Если Не ЗначениеЗаполнено(СтрСчет.НоменклатурнаяГруппа) Тогда
		//	СтрСчет.НоменклатурнаяГруппа = СтрСчет.Номенклатура.НоменклатурнаяГруппа;
		//КонецЕсли;
		// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] КОНЕЦ
		
		НайденаяСтрока = Объект.Материалы.Найти(СтрСчет.НомерСтроки,"НомерСтроки");
		
		Если НайденаяСтрока <> Неопределено Тогда
			НайденаяСтрока.СчетЗатрат     = СтрСчет.СчетЗатрат;
			// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] НАЧАЛО
			//НайденаяСтрока.СтатьяЗатрат   = СтрСчет.СтатьяЗатрат;
			ЧислоАктивныхСубконто = НайденаяСтрока.СчетЗатрат.ВидыСубконто.Количество();
			Для Сч = 1 По ЧислоАктивныхСубконто Цикл
				
				Если НайденаяСтрока.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
					НайденаяСтрока["Субконто" + Сч] = СтрСчет.СтатьяЗатрат;
				ИначеЕсли НайденаяСтрока.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
					//НайденаяСтрока["Субконто" + Сч] = СтрСчет.НоменклатурнаяГруппа;
				ИначеЕсли НайденаяСтрока.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
					НайденаяСтрока["Субконто" + Сч] = Объект.ПодразделениеОрганизации;
				ИначеЕсли НайденаяСтрока.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура Тогда
					НайденаяСтрока["Субконто" + Сч] = ПараметрыОбъекта["НоменклатураГотовойПродукции"]; 			
				КонецЕсли;
				
			КонецЦикла;
			// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] КОНЕЦ
		КонецЕсли;
		
	КонецЦикла;    
	
	Для каждого СтрокаТабличнойЧасти Из Объект.Материалы Цикл
		
		// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] НАЧАЛО
		//Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.НоменклатурнаяГруппа) Тогда
		//	СтрокаТабличнойЧасти.НоменклатурнаяГруппа = СтрокаТабличнойЧасти.Номенклатура.НоменклатурнаяГруппа;
		//КонецЕсли;
		// 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163] КОНЕЦ
		
		Если ЕстьПрименениеУСН тогда
			СтрокаТабличнойЧасти.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
		КонецЕсли;	
		
		Если СтрокаТабличнойЧасти.СчетЗатрат.УчетПоПодразделениям Тогда
			СтрокаТабличнойЧасти.ПодразделениеЗатрат = Объект.ПодразделениеЗатрат;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Объект.Склад = Параметры.СкладДляОбменаДаннымиСУТ;
	КонецЕсли;
	
	// -- обработка счета затрат по БУ и НУ (если указан один и тот же счет затрат) --
	Таблица = ТаблицаДляСчетов.Скопировать(); // Было Таблица = Объект.Материалы.Выгрузить(); // 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163]
	Таблица.Свернуть("СчетЗатрат, СтатьяЗатрат", "");
	
	Если Таблица.Количество() = 1 Тогда
		
		Объект.СчетаУчетаЗатратВТаблице = Ложь; 	
		Объект.СчетЗатрат = ТаблицаДляСчетов[0].СчетЗатрат; // Было Объект.СчетЗатрат = Объект.Материалы[0].СчетЗатрат; // 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163]
		ЧислоАктивныхСубконто = Объект.СчетЗатрат.ВидыСубконто.Количество();
		
		Для Сч = 1 По ЧислоАктивныхСубконто Цикл
			Если Объект.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
				Объект["Субконто" + Сч] = ТаблицаДляСчетов[0].СтатьяЗатрат; //Объект["Субконто" + Сч] = Объект.Материалы[0].СтатьяЗатрат; // Было 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163]
			ИначеЕсли Объект.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
				//Объект["Субконто" + Сч] = ТаблицаДляСчетов[0].НоменклатурнаяГруппа; //Объект["Субконто" + Сч] = Объект.Материалы[0].НоменклатурнаяГруппа; Было // 1СTeam Фасхетдинов Д.М. 24.10.2023 [T1C-3163]
			ИначеЕсли Объект.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
				Объект["Субконто" + Сч] = Объект.ПодразделениеОрганизации;
			ИначеЕсли Объект.СчетЗатрат.ВидыСубконто[Сч-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура Тогда
				Объект["Субконто" + Сч] = ПараметрыОбъекта["НоменклатураГотовойПродукции"]; 			
			КонецЕсли;
		КонецЦикла;  
		
	КонецЕсли;
	
	Выполнить(Алгоритмы.ПровестиДокумент);
	
	Выполнить(Алгоритмы.УдалитьСвязанныйДокументПеремещениеТоваров); 
	
КонецЕсли;